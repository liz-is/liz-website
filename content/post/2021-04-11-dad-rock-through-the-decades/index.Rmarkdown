---
title: 'Dad Rock Through the Decades'
author: Liz Ing-Simmons
date: '2021-04-11'
slug: dad-rock-through-the-decades
categories: []
tags: []
subtitle: 'Now That''s What I Call Data Science!'
summary: ''
authors: []
lastmod: '2021-04-11T15:53:57+02:00'
featured: no
image:
  caption: ''
  focal_point: ''
  preview_only: no
projects: []
draft: true
---

```{r, include = FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(wordcloud)

colours <- c("black", "red", "goldenrod2", "lightgoldenrod1", "firebrick4")
```

I've reached the age where many of my friends are becoming parents, which is both very exciting for them and slightly terrifying for those of us who feel like we were 18 only yesterday! 
I'm 30, so that's right on cue: for [babies born in the UK in 2019](https://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/livebirths/bulletins/birthcharacteristicsinenglandandwales/2019), the average age of mothers was 30.7, and the average age of fathers was 33.6. 

Nevertheless, there's something unsettling about seeing songs I listened to as a teenager, or danced to at university, included in a "Dad Rock" compilation!
I found out about "Now That's What I Call Dad Rock!" via [Boing Boing](https://boingboing.net/2021/04/03/the-now-thats-what-i-call-music-dad-rock-compilation-will-haunt-you.html) last week, and suddenly had an idea of what to do with a week off work during a pandemic and terrible weather. 

## The Compilation

```{r}
tracks <- readr::read_delim("data/track-listing-annotated.txt", delim = "\t") %>% 
  tidyr::separate(Song, into = c("Artist", "Song"), sep = " - ")

oldest_song <- tracks %>% 
  dplyr::filter(Year == min(Year))

newest_song <- tracks %>% 
  dplyr::filter(Year == max(Year))
```

You can listen to the 2018 compilation "Now That's What I Call Dad Rock!" on Spotify [here](https://open.spotify.com/playlist/11lFedD9gvEIrhQVrKrQlk?si=whfwZOTJT-Srtb8Il6cNow). It includes `r nrow(tracks)` tracks. 
In order to find out more about about what the compilers considered to be Dad Rock, I took the track listing from the Boing Boing article and used Wikipedia to find out the year each song was first released[^1], and what genre(s) each song falls into[^2]. 

[^1]: For Whitesnake's "Here I Go Again '87", since the 1987 version of the song was specifically included, I used 1987 as the release year. 
[^2]: "Addicted to Love" by Robert Palmer had no specified genre on the song's Wikipedia page, so for that song I used the genres given on the artist page.

```{r}
median_release <- median(tracks$Year)
mean_release <- mean(tracks$Year)
most_common_years <- tracks %>% 
  count(Year) %>% 
  filter(n == max(n))

ggplot(tracks, aes(x = Year)) +
  geom_bar() +
  ggrepel::geom_text_repel(data = most_common_years, aes(x = Year, y = n, label = Year), 
                           nudge_y = 0.3, min.segment.length = 0) +
  scale_y_continuous(expand = expansion(mult = 0.1)) +
  ggthemes::theme_clean(base_size = 14) +
  labs(y = "Number of songs", title = "Songs by release year")
```

The oldest song included is from `r oldest_song$Year` (`r oldest_song$Song` by `r oldest_song$Artist`), while the most recent song (`r newest_song$Song` by `r newest_song$Artist`) was released in `r newest_song$Year` - only  `r 2018 - newest_song$Year` years before the compilation. The album spans an impressive `r newest_song$Year - oldest_song$Year` years. 
`r median_release` is the median release year, while the mean is slightly later at `r round(mean_release)`.
The distribution of release year seems to be bimodal, with distinct peaks for songs released before and after 1990. 

```{r}
ref_year <- 2019
dad_age <- 33.6
tracks$age <- ref_year - tracks$Year
songs_older_than_dad <- sum(tracks$age > dad_age)
songs_before_dad_10 <- sum(tracks$age > (dad_age-10))

```

A typical dad of a newborn in `r ref_year`, with an average age of `r dad_age`, is younger than `r songs_older_than_dad` of the tracks of the album, and 
`r signif(songs_before_dad_10/nrow(tracks)*100, 3)`% of them were released before he was ten years old. 

## Genres

```{r}
tracks <- tracks %>% 
  mutate(is_rock = grepl("rock", Genre, ignore.case = TRUE)) 

tracks_genres <- tracks %>% 
  tidyr::separate_rows(Genre, sep = ",") %>% 
  mutate(Genre = tolower(stringr::str_trim(Genre)))
top_genres <- sort(table(tracks_genres$Genre), decreasing = TRUE)

# tracks_genres %>% 
#   filter(!is_rock)

n_genres <- tracks_genres %>% 
  group_by(Artist, Song) %>% 
  summarise(n_genres = n()) %>% 
  arrange(desc(n_genres))

```

Are the songs chosen to represent Dad Rock really rock? I've gotta say I have my doubts about some of them... As a hopefully less subjective source, I took the genres assigned on Wikipedia. Most songs (`r sum(n_genres$n_genres > 1)`) have more than one genre (median genres = `r median(n_genres$n_genres)`), and there's a total of `r length(unique(tracks_genres$Genre))` different genres in the dataset. 

Tallying up the most frequent genres across all tracks, it's pretty clear that the most frequent are all sub-genres of rock.

```{r, fig.width=6, fig.height=4}
set.seed(1990)
tracks_genres %>%
  count(Genre) %>%
  with(wordcloud(Genre, n, min.freq = 1, colors = colours, random.color = TRUE, 
                 rot.per = 0, fixed.asp = FALSE))
```

In fact, `r sum(tracks$is_rock)` songs have a genre that contains the word "rock". So far so good. What about the rest?

```{r}
tracks %>% 
  filter(!is_rock) %>% 
  select(Song, Artist, Year, Genre) %>% 
  mutate(Genre = tolower(Genre)) %>% 
  knitr::kable()
```

There's no obvious pattern for these seven songs - "glam metal" appears twice, but the genres are pretty varied, and so are the release years. I thought that more recent songs might be more likely to not be classified as rock, but that doesn't seem to be the case. 

Related to this, I wondered if the most common sub-genres of rock had changed over time. 

```{r}
tracks_genres %>% 
  filter(Genre %in% names(top_genres[1:5])) %>% 
  mutate(Genre = factor(Genre, levels = names(top_genres[1:5]))) %>% 
  mutate(Decade = cut(Year, breaks = c(1960, 1980, 1990, 2000, 2010, 2020), 
                      labels = c("70s", "80s", "90s", "00s", "10s"))) %>% 
  ggplot(aes(x = Decade, fill = Genre)) +
  geom_bar(position = "stack") +
  scale_fill_manual(values = c(colours[c(1, 5, 2, 3, 4)], "grey")) +
  ggthemes::theme_clean(base_size = 14) +
  labs(y = "Number of songs", title = "Genres by Decade")


frac_top_genres <- sum(tracks_genres$Genre %in% names(top_genres[1:5])) / nrow(tracks_genres)
```

This is a pretty rough analysis given the low numbers of songs, but it looks like the most common genre, "hard rock", is only used for songs released before 2000, and "alternative rock", "pop rock", and "indie rock" became more common over time.

What's missing in the plot above is that actually these top five genres only account for `r signif(100*frac_top_genres, 3)` % of all assigned genres.

```{r}
tracks_genres %>% 
  mutate(Genre = ifelse(Genre %in% names(top_genres[1:5]), Genre, "other")) %>% 
  mutate(Genre = factor(Genre, levels = c("other", names(top_genres[1:5])))) %>% 
  mutate(Decade = cut(Year, breaks = c(1960, 1980, 1990, 2000, 2010, 2020), 
                      labels = c("70s", "80s", "90s", "00s", "10s"))) %>% 
  ggplot(aes(x = Decade, fill = Genre)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("grey", colours[c(1, 5, 2, 3, 4)])) +
  ggthemes::theme_clean(base_size = 14) +
  labs(y = "Fraction of genres", title = "Genres by Decade")
```

And, of course, while I can make some guesses, I don't know how common these genres are in *all* music from these decades - and that would be a whole other project. Instead, I went down a different route for follow-up analysis. 

## Opinions

```{r}
survey_responses <- readr::read_delim("data/survey-responses.tsv", delim = "\t") %>% 
  tidyr::pivot_longer(starts_with("Is it Dad Rock"), 
                      names_to = "Song", values_to = "response") %>% 
  tidyr::separate(Song, into = c("Artist", "Song"), sep = " â€“ ") %>% 
  mutate(Artist = stringr::str_remove(pattern = stringr::coll("Is it Dad Rock? ["), string = Artist),
         Song = stringr::str_remove(pattern = "]", string = Song)) 
```

I decided to see if my biases about what does and doesn't count as Dad Rock were shared. I prepared a short survey and distributed it to friends and family. Including my own assessments, I received 22 responses. 

```{r}
responders <- survey_responses %>% 
  dplyr::select(Timestamp, "Are you a Dad?", "What year were you born?") %>% 
  unique()

responders %>% 
  group_by(`Are you a Dad?`) %>% 
  mutate(`Are you a Dad?` = ifelse(is.na(`Are you a Dad?`), "No", `Are you a Dad?`)) %>% 
  count() %>% 
  ggplot(aes(x = "", y = n, fill = `Are you a Dad?`)) +
  geom_col(position = "fill", colour = "white") +
  coord_polar("y", start = 0) +
  scale_fill_manual(values = c("grey", "firebrick4")) +
  theme_void()
```

```{r, fig.height = 1.5, fig.width = 6}
responders %>% 
  group_by(`What year were you born?`) %>% 
  count() %>% 
  ggplot(aes(x = `What year were you born?`, y = 0, size = n)) + 
  geom_point() +
  scale_y_continuous("", breaks = 0, labels = "") +
  scale_size_continuous("") +
  ggthemes::theme_clean(base_size = 14) +
  theme(axis.line.y = element_blank(), axis.ticks.y = element_blank()) +
  theme(legend.direction = "vertical", legend.position = "right", legend.background = element_blank())
```



